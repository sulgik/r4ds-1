```{r}
#| label: fig-rstudio-console
#| echo: false
#| out-width: ~
#| fig-cap: >
#|   The RStudio IDE has two key regions: type R code in the console pane
#|   on the left, and look for plots in the output pane on the right.
#| fig-alt: >
#|   The RStudio IDE with the panes Console and Output highlighted.
knitr::include_graphics("diagrams/rstudio/console.png", dpi = 270)
```

### Tidyverse

R 패키지 몇 개도 설치해야 한다.
R **패키지** 란 베이스 R 의 기능을 확장시키는 함수, 데이터, 문서의 집합체를 말한다.
R 을 성공적으로 사용하는 데에 패키지사용이 핵심이다.
이 책에서 배우게 될 패키지의 대부분은 소위 tidyverse 라고 하는 패키지집합에 들어있다.
tidyverse 의 패키지들은 데이터 및 R 프로그래밍에 관해 같은 철학에 기반하고 있으며, 함께 잘 작동되도록 설계되었다.

다음 한 줄의 코드로 tidyverse 를 설치할 수 있다.

```{r}
#| eval: false

install.packages("tidyverse")
```

자신의 컴퓨터에서 콘솔에 해당 코드를 입력한 다음 엔터 키를 눌러 실행하라.
R 이 CRAN에서 패키지들을 다운로드해서 여러분의 컴퓨터에 설치한다.

`library()`를 사용하여 패키지를 로드하기 전에는, 해당 패키지의 함수, 객체 및 도움말 파일을 사용할 수 없다.
패키지를 설치하면 `library()` 함수를 사용하여 로드할 수 있다.

```{r}
library(tidyverse)
```

이것은 tidyverse 가 패키지 아홉개를 설치하고 있음을 나타낸다 (dplyr, forcats, ggplot2, lubridate, purrr, readr, stringr, tibble, tidyr).
이 패키지들은 거의 모든 분석에서 사용될 것이기 때문에 tidyverse 의 **코어** 라 할 수 있다.

tidyverse 의 패키지는 상당히 자주 변경된다.
`tidyverse_update()`를 실행하여 업데이트가 가능한지 확인할 수 있다.

### 기타 패키지들

많은 훌륭한 패키지가 도메인이 다르거나 설계된 원칙이 달라서 tidyverse 에 포함되지 않았다.
그 패키지들은 더 좋거나 나쁜 것이 아니라 단순히 다른 것뿐이다.
다른 말로 표현하자면 tidyverse 가 아닌 패키지는 messyverse(지저분한 패키지)가 아니라 엄청나게 많은 서로 연관된 패키지들이다.
R로 더 많은 데이터과학 프로젝트를 수행하면 새로운 패키지와 데이터에 대한 새로운 사고 방식을 배우게 될 것이다.

이 책에서 우리는 tidyverse 에 없는 패키지들을 여럿 사용할 것이다.
예를 들어, R 을 학습하는 과정에서 좋은 데이터셋을 제공해 주는 다음의 패키지들을 사용할 것이다.

```{r}
#| eval: false

install.packages(c("babynames", "gapminder", "nycflights13", "palmerpenguins"))
```

또 다른 패키지 하나도 일회성으로 사용할 것이다.
지금 설치할 필요는 없고, 다음과 같은 에러메시지를 볼 때 기억해야 한다.

```{r}
#| eval: false

library(ggrepel)
#> Error in library(ggrepel) : there is no package called ‘ggrepel’
```

`install.packages("ggrepel")` 을 실행하여 해당 패키지를 설치하라.

## R 코드 실행하기

R 코드를 실행하는 예를 이전 절에서 이미 보았다.
코드는 다음과 같다.

```{r}
#| eval: true
1 + 2
```

로컬 콘솔에서 동일한 코드를 실행하면 다음과 같이 표시된다.

```         
> 1 + 2
[1] 3
```

이 둘 사이에 주요 차이점이 두 개 있다.
콘솔에서 자판입력은 **프롬프트** 라고 부르는 `>` 뒤에 한다.
이 책에서는 프롬프트를 표시하지 않는다.
이 책에서 출력은 `#>`로 주석처리한다.
콘솔에서 출력은 코드 밑에 나타난다.
이 차이 때문에, 전자책 버전에서는, 코드를 책에서 콘솔로 쉽게 복사할 수 있다.

이 책 전체에서 우리는 코드를 참조하기 위해 일관된 규칙을 사용한다.

-   함수는 `sum()` 또는 `mean()`과 같이 코드 글꼴을 사용하고 괄호가 따라 나온다.

-   다른 R 객체(예: 데이터 또는 함수인수)는 코드 글꼴로 되어 있으며 `flights` 혹은 `x`와 같이 코드 글꼴로 괄호 없이 나타낸다.

-   객체가 어떤 패키지로부터 온 것인지를 보여주고자 할 때는, `dplyr::mutate()`, 혹은 `nycflights13::flights` 처럼 패키지 이름과 그 뒤 두 개의 콜론을 사용한다.
    이것도 유효한 R 코드이다.

## Acknowledgments

This book isn't just the product of Hadley, Mine, and Garrett but is the result of many conversations (in person and online) that we've had with many people in the R community.
We're incredibly grateful for all the conversations we've had with y'all; thank you so much!

```{r}
#| eval: false
#| echo: false

library(tidyverse)
contribs_all_json <- gh::gh("/repos/:owner/:repo/contributors",
  owner = "hadley",
  repo = "r4ds",
  .limit = Inf
)
contribs_all <- tibble(,
  login = contribs_all_json %>% map_chr("login"),
  n = contribs_all_json %>% map_int("contributions")
)

contribs_old <- read_csv("contributors.csv", col_types = list())
contribs_new <- contribs_all %>% anti_join(contribs_old, by = "login")

# Get info for new contributors
needed_json <- map(
  contribs_new$login, 
  ~ gh::gh("/users/:username", username = .x),
  .progress = TRUE
)
info_new <- tibble(
  login = contribs_new$login,
  name = map_chr(needed_json, "name", .default = NA),
  blog = map_chr(needed_json, "blog", .default = NA)
)
info_old <- contribs_old %>% select(login, name, blog)
info_all <- bind_rows(info_old, info_new)

contribs_all <- contribs_all %>% 
  left_join(info_all, by = "login") %>% 
  arrange(login)
write_csv(contribs_all, "contributors.csv")
```

```{r}
#| results: asis
#| echo: false
#| message: false

library(dplyr)
contributors <- readr::read_csv("contributors.csv")
contributors <- contributors %>% 
  filter(!login %in% c("hadley", "garrettgman", "mine-cetinkaya-rundel")) %>% 
  mutate(
    login = paste0("\\@", login),
    desc = ifelse(is.na(name), login, paste0(name, " (", login, ")"))
  )

cat("This book was written in the open, and many people contributed via pull requests. A special thanks to all ",nrow(contributors), " of you who contributed improvements via GitHub pull requests (in alphabetical order by username): ", sep = "")
cat(paste0(contributors$desc, collapse = ", "))
cat(".\n")
```

## Colophon

An online version of this book is available at <https://r4ds.hadley.nz>.
It will continue to evolve in between reprints of the physical book.
The source of the book is available at <https://github.com/hadley/r4ds>.
The book is powered by [Quarto](https://quarto.org), which makes it easy to write books that combine text and executable code.

```{r}
#| eval: false
#| echo: false
#| results: asis

pkgs <- sessioninfo::package_info(
  tidyverse:::tidyverse_packages(),
  dependencies = FALSE
)
df <- tibble(
  package = pkgs$package,
  version = pkgs$ondiskversion,
  source = gsub("@", "\\\\@", pkgs$source)
)
knitr::kable(df, format = "markdown")
```

```{r}
#| include: false

cli:::ruler()
```
